@model IEnumerable<ControlVentas.EN.Producto>

@{
    ViewBag.Title = "VerProductos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["SuccessMessage"] != null)
{
    <script>
        Swal.fire({
            title: '¡Éxito!',
            text: '@TempData["SuccessMessage"]',
            icon: 'success',
            confirmButtonText: 'Aceptar'
        });
    </script>
}

@* Botones canvas *@
<div class="col-6 p-2 justify-content-end">
    @* BTN Agregar producto *@
    <button class="btn btn-success" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"> Agregar Producto</button>
</div>


<!-- formulario Marca-->
<div class="offcanvas offcanvas-end" tabindex="-1" id="CanvaMarca" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title">Agregar Marca</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form id="frmMantMarca">
            <input type="hidden" id="txtIdM" name="Id" />
            <div class="form-group" id="txtIdM" name="Id">
                <label for="txtMarca" class="col-form-label">Nombre:</label>
                <input type="text" class="form-control" id="txtMarca" name="Nombre" />
            </div>
            <br />
            <button type="button" class="btn btn-primary" id="btnConfirmarM">Confirmar</button>
        </form>
    </div>
</div> 


@*Formulario Categoria*@
<div class="offcanvas offcanvas-end" tabindex="-1" id="CanvaCategoria" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title">Agregar Categorias</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form id="frmMantCategoria">
            <input type="hidden" id="txtId" name="Id" />
            <div class="form-group" id="txtId" name="Id">
                <label for="txtNombre" class="col-form-label">Nombre:</label>
                <input type="text" class="form-control" id="txtNombre" name="Nombre" />
            </div>
            <br />
            <button type="button" class="btn btn-primary" id="btnConfirmar">Confirmar</button>
        </form>
    </div>
</div>


<!---------------------------------------------------------------------------------------------------------------------------->

@* Canva agregar producto *@
<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel"> Agregar productos</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="card-body">
            <form action="@Url.Action("Guardar","Producto")" method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="Nombre">Nombre</label>
                    <input type="text" class="form-control" id="Nombre" name="Nombre" required>
                </div>
                <br />
                <div class="form-group">
                    <label id="lblCategoriaSeleccionada" for="slIdCategoria" class="form-label"> Seleccionar categoria:</label>
                    @* BTN Agregar categoria *@
                    <button class="btn btn-primary btn-sm" type="button" data-bs-toggle="offcanvas" data-bs-target="#CanvaCategoria" aria-controls="offcanvasRight">+</button>
                    <select id="slCategoria" name="IdCategoria" onchange="actualizarCategoriaSeleccionada()" class="form-select"></select>
                </div>
                <br />
                <div class="form-group">
                    <label id="lblMarcaSeleccionada" for="slIdMarca" class="form-label"> Seleccionar Marca:</label>
                    @* BTN Agregar marca *@
                    <button class="btn btn-primary btn-sm" type="button" data-bs-toggle="offcanvas" data-bs-target="#CanvaMarca" aria-controls="offcanvasRight">+</button>
                    <select id="slMarca" name="IdMarca" onchange="actualizarMarcaSeleccionada()" class="form-select"></select>
                </div>
                <br />
                <div class="form-group">
                    <label for="Descripcion">Descripcion:</label>
                    <input type="text" class="form-control" id="Descripcion" name="Descripcion" required>
                </div>
                <div class="form-group">
                    <label for="PrecioCompra">Precio Compra:</label>
                    <input type="text" class="form-control" id="PrecioCompra" name="PrecioCompra" required>
                </div>
                <div class="form-group">
                    <label for="PrecioVenta">Precio Venta:</label>
                    <input type="text" class="form-control" id="PrecioVenta" name="PrecioVenta" required>
                </div>
                <div class="form-group">
                    <label for="Cantidad">Cantidad:</label>
                    <input type="text" class="form-control" id="Cantidad" name="Cantidad" required>
                </div>

                <div class="form-group">
                    <label for="Img">Img:</label>
                    <input type="file" class="form-control" id="Img" name="Img" onchange="previewImage(this)" required>
                </div>
                <div class="form-group">
                    <img id="preview" src="#" alt="Your image preview will appear here" style="display: none; width: 200px; height: 200px;">
                </div>
                <br />

                <div>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>


            </form>
        </div>
    </div>
</div>
@* Fin Canva agregar producto *@

<script>
    function previewImage(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#preview').attr('src', e.target.result);
                $('#preview').show();
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    
    // Nueva categoria
        function fnConfirmarDatos() {
            var urlAccion = '@Url.Action("Guardar", "Categoria")';
           
            $.ajax({
                method: 'POST',
                url: urlAccion,
                data: $("#frmMantCategoria").serialize(),
                datatype: JSON,
                success: function (resultado) {
                    if (resultado > 0) {
                        //alert("Los datos se guardaron exitosamente");
                        Swal.fire(
                            'Listo',
                            'Los datos se guardaron exitosamente en Categorias',
                            'success'
                        )
                     
                    }
                    else {
                        //alert("Ocurrio un error al guardar los datos en el servidor");
                        
                        Swal.fire(
                            'Alerta',
                            'Ocurrio un error al guardar los datos en el servidor',
                            'warning'
                        )
                    }
                },
                error: function (error) {
                    alert("Error: " + error.statusText);
                }

            });

        }
        $("#btnConfirmar").click(function () {
            fnConfirmarDatos();

        });
    //Nueva Marca
    function fnConfirmarDatosM() {
        var urlAccion = '@Url.Action("Guardar", "Marca")';

        $.ajax({
            method: 'POST',
            url: urlAccion,
            data: $("#frmMantMarca").serialize(),
            datatype: JSON,
            success: function (resultado) {
                if (resultado > 0) {
                    //alerta
                    Swal.fire(
                        'Listo',
                        'Los datos se guardaron exitosamente en Marcas',
                        'success'
                    )
                } else {
                    Swal.fire(
                        'Alerta',
                        'Ocurrio un error al guardar los datos',
                        'warning'
                    )
                }
            },
            error: function (error) {
                alert("Error: " + error.statusText);
            }

        });
    }

    $("#btnConfirmarM").click(function () {
        fnConfirmarDatosM();

    });






</script>




<!--Estilo CSS para el Producto-->
<style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 20px;
    }

    .card {
        width: 23%;
        display: inline-block;
        margin-right: 20px;
        margin-bottom: 20px;
        vertical-align: top;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }

    .card-img-top {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }
</style>
<div class="card-container">
    @foreach (var item in Model)
    {
        string imageBase64 = Convert.ToBase64String(item.Img);
        string imageSrc = string.Format("data:image/jpeg;base64,{0}", imageBase64);
        <div class="card">
            <img class="card-img-top" src="@imageSrc" alt="Product image">
            <div class="card-body">
                <h5 class="card-title">@item.Nombre</h5>
                <p class="card-text">@item.Descripcion</p>
                <p class="card-text">

                    <small class="text-muted">Categoria : @item.NombreCategoria</small><br />
                    <small class="text-muted">Marca: @item.NombreMarca</small><br />
                    <small class="text-muted">Cantidad: @item.Cantidad</small><br />
                    <small class="text-muted">Precio de Compra: @item.PrecioCompra</small><br />
                    <small class="text-muted">Precio de Venta: @item.PrecioVenta</small><br />
                    <small class="text-muted">Hora: @item.FechaHoraIngreso</small><br />
                    <button type='button' class='btn btn-warning me-2' onclick='fnObtenerDatosModificar'>Editar</button>
                    <button type='button' class='btn btn-danger' onclick='fnEliminar'>Eliminar</button>
                </p>
            </div>
        </div>
    }
</div>
@section Scripts{
    <script>

        function actualizarCategoriaSeleccionada() {
            var categoriaSeleccionada = $("#slCategoria option:selected").text();
            $("#lblCategoriaSeleccionada").text(categoriaSeleccionada);
        }

        function actualizarMarcaSeleccionada() {
            var marcaSeleccionada = $("#slMarca option:selected").text();
            $("#lblMarcaSeleccionada").text(marcaSeleccionada);
        }

          function fnCargarListaCategorias() {
            $.ajax({
                method: 'POST',
                url: '@Url.Action("ObtenerCategorias","Producto")',
                datatype: JSON,
                success: function (lista) {
                    $("#slCategoria, #slCategoriaB").append("<option value='0'> Selecciona una categoria</option>");
                    for (var i = 0; i < lista.length; i++) {
                        $("#slCategoria, #slCategoriaB").append("<option value='" + lista[i].Id + "'>" + lista[i].Nombre + "</option>");
                    }
                },
                error: function (error) {
                    alert("Error:" + error.statusText);
                }
            });
        }






        //LISTA PARA MARCA
       function fnCargarListaMarcas() {
            $.ajax({
                method: 'POST',
                url: '@Url.Action("ObtenerMarcas","Producto")',
                datatype: JSON,
                success: function (lista) {
                    $("#slMarca, #slMarcaB").append("<option value='0'> Selecciona una marca</option>");
                    for (var i = 0; i < lista.length; i++) {
                        $("#slMarca,#slMarcaB").append("<option value='" + lista[i].Id + "'>" + lista[i].Nombre + "</option>");
                    }
                },
                error: function (error) {
                    alert("Error:" + error.statusText);
                }
            });
        }






        $("#btnBuscar").click(function () {
            fnBuscar();
             });
        function fnBuscar() {
           $.ajax({
           method: 'POST',
           url: '@Url.Action("Buscar","Producto")',
             data: $("#frmBuscar").serialize(),
             datatype: JSON,
                success: function (lista) {
                  var productsContainer = $(".products-container");
                  productsContainer.empty();
                   for (var i = 0; i < lista.length; i++) {
                      var imagen = "data:image/jpeg;base64," + btoa(String.fromCharCode.apply(null, new Uint8Array(lista[i].Img)));
                           var product = "\
                          <div class='product'>\
                         <img src='" + imagen + "' alt='Product " + (i + 1) + "'>\
                         <h3>" + lista[i].Nombre + "</h3>\
                         <p>Categoría: " + lista[i].Categoria.Nombre + "</p>\
                         <p>Marca: " + lista[i].Marca.Nombre + "</p>\
                         <p>Descripción: " + lista[i].Descripcion + "</p>\
                         <p>Precio: $" + lista[i].Inventario.PrecioVenta + "</p>\
                         <p>Stock: " + lista[i].Inventario.Cantidad + "</p>\
                        </div>";
                             productsContainer.append(product);

                   }

               },
               error: function (error) {
                                   alert("Error:" + error.statusText);
               }

           });


        }





        $(document).ready(function () {
            fnCargarListaCategorias();
            fnCargarListaMarcas();
        });

    </script>
}